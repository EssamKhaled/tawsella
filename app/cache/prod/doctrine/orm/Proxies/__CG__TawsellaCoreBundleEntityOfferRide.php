<?php

namespace Proxies\__CG__\Tawsella\CoreBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class OfferRide extends \Tawsella\CoreBundle\Entity\OfferRide implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'id', 'rideType', 'rideFrom', 'rideTo', 'stopOver', 'departureDate', 'returnDate', 'price', 'availableSeats', 'womenOnly', 'notes', 'active', 'updated', 'created', '' . "\0" . 'Tawsella\\CoreBundle\\Entity\\OfferRide' . "\0" . 'user');
        }

        return array('__isInitialized__', 'id', 'rideType', 'rideFrom', 'rideTo', 'stopOver', 'departureDate', 'returnDate', 'price', 'availableSeats', 'womenOnly', 'notes', 'active', 'updated', 'created', '' . "\0" . 'Tawsella\\CoreBundle\\Entity\\OfferRide' . "\0" . 'user');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (OfferRide $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setCreatedTimeStamp()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedTimeStamp', array());

        return parent::setCreatedTimeStamp();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdatedTimeStamp()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdatedTimeStamp', array());

        return parent::setUpdatedTimeStamp();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setRideType($rideType)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRideType', array($rideType));

        return parent::setRideType($rideType);
    }

    /**
     * {@inheritDoc}
     */
    public function getRideType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRideType', array());

        return parent::getRideType();
    }

    /**
     * {@inheritDoc}
     */
    public function setStopOver($stopOver)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStopOver', array($stopOver));

        return parent::setStopOver($stopOver);
    }

    /**
     * {@inheritDoc}
     */
    public function getStopOver()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStopOver', array());

        return parent::getStopOver();
    }

    /**
     * {@inheritDoc}
     */
    public function setDepartureDate($departureDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDepartureDate', array($departureDate));

        return parent::setDepartureDate($departureDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getDepartureDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDepartureDate', array());

        return parent::getDepartureDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setReturnDate($returnDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setReturnDate', array($returnDate));

        return parent::setReturnDate($returnDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getReturnDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReturnDate', array());

        return parent::getReturnDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrice($price)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrice', array($price));

        return parent::setPrice($price);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrice()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrice', array());

        return parent::getPrice();
    }

    /**
     * {@inheritDoc}
     */
    public function setAvailableSeats($availableSeats)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAvailableSeats', array($availableSeats));

        return parent::setAvailableSeats($availableSeats);
    }

    /**
     * {@inheritDoc}
     */
    public function getAvailableSeats()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAvailableSeats', array());

        return parent::getAvailableSeats();
    }

    /**
     * {@inheritDoc}
     */
    public function setWomenOnly($womenOnly)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWomenOnly', array($womenOnly));

        return parent::setWomenOnly($womenOnly);
    }

    /**
     * {@inheritDoc}
     */
    public function getWomenOnly()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWomenOnly', array());

        return parent::getWomenOnly();
    }

    /**
     * {@inheritDoc}
     */
    public function setNotes($notes)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNotes', array($notes));

        return parent::setNotes($notes);
    }

    /**
     * {@inheritDoc}
     */
    public function getNotes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNotes', array());

        return parent::getNotes();
    }

    /**
     * {@inheritDoc}
     */
    public function setActive($active)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setActive', array($active));

        return parent::setActive($active);
    }

    /**
     * {@inheritDoc}
     */
    public function getActive()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getActive', array());

        return parent::getActive();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdated($updated)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdated', array($updated));

        return parent::setUpdated($updated);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdated', array());

        return parent::getUpdated();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreated($created)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreated', array($created));

        return parent::setCreated($created);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreated', array());

        return parent::getCreated();
    }

    /**
     * {@inheritDoc}
     */
    public function setRideFrom(\Tawsella\CoreBundle\Entity\City $rideFrom = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRideFrom', array($rideFrom));

        return parent::setRideFrom($rideFrom);
    }

    /**
     * {@inheritDoc}
     */
    public function getRideFrom()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRideFrom', array());

        return parent::getRideFrom();
    }

    /**
     * {@inheritDoc}
     */
    public function setRideTo(\Tawsella\CoreBundle\Entity\City $rideTo = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRideTo', array($rideTo));

        return parent::setRideTo($rideTo);
    }

    /**
     * {@inheritDoc}
     */
    public function getRideTo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRideTo', array());

        return parent::getRideTo();
    }

    /**
     * {@inheritDoc}
     */
    public function setUser(\Tawsella\UserBundle\Entity\User $user = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUser', array($user));

        return parent::setUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function getUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUser', array());

        return parent::getUser();
    }

}
